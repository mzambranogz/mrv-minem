ACTUALIZAR pkg detalle indicadores

BODY

PROCEDURE USP_SEL_CABECERA_INDICADOR(
        pID_MEDMIT  IN NUMBER,
        pID_ENFOQUE IN NUMBER,
        pRefcursor      OUT SYS_REFCURSOR
  )AS
  BEGIN
        OPEN pRefcursor FOR
        SELECT  MI.ID_ENFOQUE, MP.NOMBRE_PARAMETRO, MI.ORDEN, MI.ID_GRUPO_INDICADOR, MGI.COLOR_GRUPO, MI.ID_PARAMETRO,
                MP.ID_TIPO_CONTROL, MP.EDITABLE, MP.ID_TIPO_DATO, MP.VERIFICABLE,MP.LEYENDA_PARAMETRO, MP.VISIBLE, MP.ENERGIA_TOTAL, --ADD
                NVL(MP.DESCRIPCION_PARAMETRO,' ') DESCRIPCION_PARAMETRO, MP.DESCRIPCION_UNIDAD, UM.SIMBOLO UNIDAD, PR.SIMBOLO PREFIJO, MP.COMBINACION_UNIDAD
        FROM    T_MAEM_INDICADOR MI
        LEFT JOIN   T_MAEM_MRV_PARAMETRO MP ON MI.ID_PARAMETRO = MP.ID_PARAMETRO
        --LEFT JOIN   M_MAED_MRV_PARAMETRO PD ON MP.ID_PARAMETRO = PD.ID_PARAMETRO
        LEFT JOIN   T_MAMEM_GRUPO_INDICADOR MGI ON MI.ID_GRUPO_INDICADOR = MGI.ID_GRUPO_INDICADOR
        LEFT JOIN   T_MAEM_UNIDAD_MEDIDA UM ON MP.ID_UNIDAD_MEDIDA = UM.ID_UNIDAD_MEDIDA
        LEFT JOIN   T_MAEM_PREFIJO PR ON MP.ID_PREFIJO = PR.ID_PREFIJO
        WHERE MI.ID_MEDMIT = pID_MEDMIT AND MI.ID_ENFOQUE = pID_ENFOQUE
        AND MI.FLAG_ESTADO = '1' --ADD
        ORDER BY MI.ID_ENFOQUE ,MI.ORDEN ASC;
  END USP_SEL_CABECERA_INDICADOR;

=================================================================

PKG DETALLE INDICADORES

CABECERA


PROCEDURE USP_SEL_GET_INDICADORES(
        pID_INICIATIVA IN NUMBER,
        pID_ENFOQUE IN NUMBER,
        pID_MEDMIT IN NUMBER,
        pID_PARAMETRO IN NUMBER,
        pID_ORDERBY IN VARCHAR2,
        pID_ORDEN IN VARCHAR2,
        pRefcursor OUT SYS_REFCURSOR
  );

---------------------------------

BODY

PROCEDURE USP_SEL_GET_INDICADORES(
        pID_INICIATIVA IN NUMBER,
        pID_ENFOQUE IN NUMBER,
        pID_MEDMIT IN NUMBER,
        pID_PARAMETRO IN NUMBER,
        pID_ORDERBY IN VARCHAR2,
        pID_ORDEN IN VARCHAR2,
        pRefcursor OUT SYS_REFCURSOR
  )AS
        vQuery      VARCHAR2(30000) := '';
  BEGIN
        --OPEN pRefcursor FOR
        /*SELECT  DISTINCT IDA.ID_INDICADOR, IDA.ID_ENFOQUE, IDA.ID_INICIATIVA, IDA.ID_MEDMIT
        FROM    T_MAEM_INDICADOR_DATA IDA
        WHERE   ID_INICIATIVA = pID_INICIATIVA AND
                ID_ENFOQUE = pID_ENFOQUE AND
                ID_MEDMIT = pID_MEDMIT AND
                FLAG_ESTADO = '1'
        ORDER BY IDA.ID_INDICADOR ASC; --ADD*/
        
        vQuery := '
        SELECT  DISTINCT IDA.ID_INDICADOR, IDA.ID_ENFOQUE, IDA.ID_INICIATIVA, IDA.ID_MEDMIT
        ' ||
        CASE
          WHEN pID_PARAMETRO > 0 THEN
              ', IDA.VALOR'
          END
        || '
        FROM    T_MAEM_INDICADOR_DATA IDA
        WHERE   ID_INICIATIVA = '|| pID_INICIATIVA ||' AND
                ID_ENFOQUE = '|| pID_ENFOQUE ||' AND
                ID_MEDMIT = '|| pID_MEDMIT ||' AND
                ' ||
                CASE
                  WHEN pID_PARAMETRO > 0 THEN
                      'ID_PARAMETRO = '|| pID_PARAMETRO ||' AND'
                  END
                || '
                FLAG_ESTADO = ''1''
        ORDER BY ' || pID_ORDERBY ||' '|| pID_ORDEN ;
        OPEN pRefcursor FOR vQuery;
  END USP_SEL_GET_INDICADORES;


-----------------------



==============================================================

PKG INICIATIVA MITIGACION

BODY

PROCEDURE USP_SEL_GEI(
        pRefcursor  OUT SYS_REFCURSOR
    )AS
      BEGIN

        OPEN pRefcursor FOR
        SELECT  ID_GEI,
                DESCRIPCION
        FROM    T_MAE_GEI
        WHERE   FLAG_ESTADO = '1';

    END USP_SEL_GEI;

==============================================================

PKG INICIATIVA MITIGACION

BODY

    PROCEDURE USP_SEL_ENERG(
        pRefcursor  OUT SYS_REFCURSOR
    )AS
      BEGIN

        OPEN pRefcursor FOR
        SELECT  ID_ENERG,
                DESCRIPCION
        FROM    T_MAE_ENERG
        WHERE   NVL(FLAG_ESTADO,'1') = '1';

    END USP_SEL_ENERG;